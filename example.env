# - Server vars -
# This is the session key, used to sign session tokens.
# This needs to be a long, cryptographically secure random string.
# In Linux, you can generate such a string with `cat /dev/urandom | env LC_CTYPE=C tr -dc _A-Za-z0-9 | head -c${1:-64}`
export APP_SESSION_SECRET="long secret string"
export APP_HTTP_PORT=3000

## HTTPS config
# For development, you can generate a self-signed cert using:
# `openssl req -x509 -newkey rsa:2048 -sha256 -nodes -keyout key.pem -out cert.pem -days 365`.
# For production, you can use the free https://letsencrypt.org/ service to obtain a cert and key file,
# or get them from other services.
# If you don't define securePort, the app will be served over http only, but you could also provide
# tls/https by using a proxy server. This is actually recommended by some.
export APP_SECURE_PORT=3001
# Paths are relative to project root.
export APP_SECURE_KEY="ssl/key.pem"
export APP_SECURE_CERT="ssl/cert.pem"

## Postgres connection details
export PG_USER="pgUser"
export PG_PASSWORD="pgPassword"
export PG_DATABASE="pgDatabase"
